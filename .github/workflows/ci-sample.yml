name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, edited, reopened, synchronize]

jobs:
  main:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}
    strategy:
      matrix:
        node-version: [14, 16]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Needed for nrwl/nx-set-shas

      - name: NX config # set env vars for 'nx affected'
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: ${{ github.base_ref }}

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          registry-url: https://npm.pkg.github.com/

      - name: Install dependencies
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # Skip post-install scripts, to protect NODE_AUTH_TOKEN from 3rd parties
        run: npm ci --ignore-scripts
      
      - name: Dependencies post install steps
        # run post-install scripts without NODE_AUTH_TOKEN
        run: npm rebuild && npm run prepare --if-present
      
      - name: NX lint
        run: |
          npx nx workspace-lint
          npx nx format:check
          npx nx affected --target lint --parallel 3

      - name: NX test affected
        run: |
          npx nx affected --target test --parallel 3 --ci --code-coverage

      - name: NX build affected
        run: |
          npx nx affected --target build --parallel 3

      - name: Release
        if: ${{ success() && (github.event_name != 'pull_request' || github.event.action == 'closed' && github.event.pull_request.merged == true) }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PACKAGES_TOKEN }}
        run: |
          npx nx affected --target release --all